cloud:
  config:
    package_update: true
    runcmd:
      - systemctl disable cloud-init
      - systemctl enable web
      - mkdir -p /opt/web

service: |
  [Unit]
  Description=web
  After=network.target

  [Service]
  Type=simple
  EnvironmentFile=/etc/web
  WorkingDirectory=/opt/web
  ExecStart={{{command}}}

  [Install]
  WantedBy=multi-user.target
          
providers:
  
  docker:

    build:
      - docker build -t {{{language}}}.{{{framework}}} .

    metadata:
      - docker run -td {{{language}}}.{{{framework}}} > cid.txt
      - docker inspect `cat cid.txt` | jq -r '.[0].NetworkSettings.IPAddress' > ip.txt
      - while true; do curl "http://`cat ip.txt`:3000" > /dev/null && break; done

    clean:
      - docker ps -a -q  --filter ancestor={{{language}}}.{{{framework}}}  | xargs docker rm -f

  docker-machine:

    build:
      - docker build -t -p 3000:3000 {{{language}}}.{{{framework}}} .

    metadata:
      - docker-machine inspect the-benchmarker > ip.txt
      - while true; do curl "http://`cat ip.txt`:3000" > /dev/null && break; done

    clean:
      - docker ps -a -q  --filter ancestor={{{language}}}.{{{framework}}}  | xargs docker rm -f

  digitalocean:

    build:
    - rake cloud:config LANG={{{language}}} FRAMEWORK={{{framework}}}
    - doctl compute droplet create {{{language}}}.{{{framework}}} --region {{{DO_REGION}}} --image {{{DO_IMAGE}}} --size {{{DO_SIZE}}} --user-data-file user_data.yml --wait --ssh-keys {{{DO_FINGERPRINT}}} {{{DO_OPTIONS}}}
      
    metadata:
      - doctl compute droplet list {{{language}}}.{{{framework}}} --format ID --no-header > id.txt
      - doctl compute droplet list {{{language}}}.{{{framework}}} --format {{{DO_ATTRIBUTE}}} --no-header > ip.txt
      - rake cloud:wait LANG={{{language}}} FRAMEWORK={{{framework}}} HOST=`cat ip.txt` SSH_KEY={{{DO_KEY}}}
      - rake cloud:upload LANG={{{language}}} FRAMEWORK={{{framework}}} HOST=`cat ip.txt` SSH_KEY={{{DO_KEY}}}
      - "{{#bootstrap}} doctl compute ssh {{{language}}}.{{{framework}}} --ssh-key-path {{{DO_KEY}}} --ssh-command 'cd /opt/web && {{{.}}}' {{/bootstrap}}"
      - doctl compute droplet-action reboot `cat id.txt`
      - while true; do curl "http://`cat ip.txt`:3000" > /dev/null && break; done

    clean:
      - doctl compute droplet delete {{{language}}}.{{{framework}}} --force
