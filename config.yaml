cloud:
  config:
    output:
      init:
          output: "> /var/log/cloud-init.out"
          error: "> /var/log/cloud-init.err"
      config: "tee -a /var/log/cloud-config.log"
      final:
          - ">> /var/log/cloud-final.out"
          - "/var/log/cloud-final.err"
          
providers:
  
  docker:
    build: 
      - docker build -t {{{language}}}.{{{framework}}} .

    metadata: 
      - docker run -td {{{language}}}.{{{framework}}} | xargs -i docker inspect {} | jq -r '.[0].NetworkSettings.IPAddress' > ip.txt

    clean: 
      - docker ps -a -q  --filter ancestor={{{language}}}.{{{framework}}}  | xargs -r docker rm -f

  digitalocean:

    build:
    - rake cloud:config LANG={{{language}}} FRAMEWORK={{{framework}}}
    - doctl compute droplet create {{{language}}}.{{{framework}}} --region {{{DO_REGION}}} --image {{{DO_IMAGE}}} --size {{{DO_SIZE}}} --user-data-file user_data.yml --wait --ssh-keys {{{DO_FINGERPRINT}}} {{{DO_OPTIONS}}}
      
    metadata:
      - doctl compute droplet list {{{language}}}.{{{framework}}} --format ID --no-header > id.txt
      - doctl compute droplet list {{{language}}}.{{{framework}}} --format {{{DO_ATTRIBUTE}}} --no-header > ip.txt
      - rake cloud:wait LANG={{{language}}} FRAMEWORK={{{framework}}} HOST=`cat ip.txt` SSH_KEY={{{DO_KEY}}}
      - rake cloud:upload LANG={{{language}}} FRAMEWORK={{{framework}}} HOST=`cat ip.txt` SSH_KEY={{{DO_KEY}}}
      - doctl compute droplet-action reboot `cat id.txt`
      - sleep 10
      - while true; do curl "http://`cat ip.txt`:3000" > /dev/null && break; done

    clean:
      - doctl compute droplet delete {{{language}}}.{{{framework}}} --force
